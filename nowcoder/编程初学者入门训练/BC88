/**
 * 
 */
package com.nowcoder.bc;

import java.util.Arrays;
import java.util.Scanner;

/**
 * @author 15159
 *题目描述
有一个有序数字序列，从小到大排序，将一个新输入的数插入到序列中，保证插入新数后，序列仍然是升序。
输入描述:
共三行，
第一行输入一个整数(0≤N≤50)。
第二行输入N个升序排列的整数，输入用空格分隔的N个整数。
第三行输入想要进行插入的一个整数。
输出描述:
输出为一行，N+1个有序排列的整数。
示例1
输入
7 
5 30 40 50 60 70 90
20
输出
5 20 30 40 50 60 70 90
 */
public class Bc88 {

	/**
	 * @param args
	 */
	public static void main(String[] args) {
		
		Scanner sc = new Scanner(System.in);
		
		while(sc.hasNext()) {
			
			int n = sc.nextInt();
			int[] arr = new int[n+1];
			
			for(int i=0;i<n;i++) {
				arr[i]=sc.nextInt();
			}
			int lastnum = sc.nextInt();
			arr[n] =lastnum;
			Arrays.sort(arr);
			for(int i=0;i<arr.length;i++)
				System.out.print(arr[i]+" ");
			
		}
		

	}

}
